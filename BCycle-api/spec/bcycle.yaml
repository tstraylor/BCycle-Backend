openapi: 3.0.1
info:
  title: BCycle API
  description: An API to manage the BCycle stations.
  version: 1.2.0
  contact:
    name: Thomas Traylor
  license:
    name: MIT
    url: https://opensource.org/license/mit
servers:
  - url: http://{host}:{port}/{basePath}
    description: The API server path.
    variables:
      host:
        default: 'bcycle.local'
      port:
        default: '80'
      basePath:
        default: '/api/v1'

paths:
  /stations:
    get:
      operationId: getStations
      tags:
        - Stations
      description: Returns an array of BCycle Stations. If the query parameters `latitude` and `longitude`
        are provide the results are reduced to the BCycle stations within the radius specified by `distance`.
      parameters:
        - $ref: "#/components/parameters/latitude"
        - $ref: "#/components/parameters/longitude"
        - $ref: "#/components/parameters/distance"
        - $ref: "#/components/parameters/zipcode"
      responses:
        '200':
          $ref: "#/components/responses/stations_response"
        404:
          description: Not Found
        '500':
          description: The server encountered an unexpected condition which prevented it from fulfilling the request.

    head:
      operationId: getStationCount
      tags:
        - Stations
      description: Get a station count.
      parameters:
        - $ref: "#/components/parameters/latitude"
        - $ref: "#/components/parameters/longitude"
        - $ref: "#/components/parameters/distance"
        - $ref: "#/components/parameters/zipcode"
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              description: Total number of stations found.
              schema:
                type: integer
        '404':
          description: Not Found.
        '500':
          description: The server encountered an unexpected condition which prevented it from fulfilling the request.

    post:
      operationId: createStation
      tags:
        - Stations
      description: Add a new BCycle Station.
      requestBody:
        $ref: "#/components/requestBodies/station_create"
      responses:
        '201':
          $ref: "#/components/responses/create_station_response"
        '500':
          description: The server encountered an unexpected condition which prevented it from fulfilling the request.

  /stations/{station_id}:
    get:
      operationId: getStation
      tags:
        - Stations
      description: Get the BCycle station associated with the `station_id`.
      parameters:
        - $ref: "#/components/parameters/station_id"
      responses:
        '200':
          $ref: "#/components/responses/station_response"
        '404':
          description: The resource requested does not exists.
        '500':
          description: The server encountered an unexpected condition which prevented it from fulfilling the request.

    delete:
      operationId: removeStation
      tags:
        - Stations
      description: Remove the BCycle stations specified by the `station_id`.
      parameters:
        - $ref: "#/components/parameters/station_id"
      responses:
        '204':
          description: The resource was successfully deleted.
        '404':
          description: The resource requested does not exists.
        500:
          description: The server encountered an unexpected condition which prevented it from fulfilling the request.

components:
  parameters:
    station_id:
      name: station_id
      in: path
      description: The `station_id` to query.
      required: true
      schema:
        type: integer
        format: int64

    latitude:
      name: latitude
      in: query
      description: Latitude of the center search coordinate. If used, `longitude` is required.
      required: false
      schema:
        type: number
        format: double
        minimum: -90.0
        maximum: 90.0

    longitude:
      name: longitude
      in: query
      description: Longitude of the center search coordinate. If used, `latitude` is required.
      required: false
      schema:
        type: number
        format: double
        minimum: -180.0
        maximum: 180.0

    distance:
      name: distance
      in: query
      description: The distance from the latitude and longitude to search.  Default is 1 mile.
      required: false
      schema:
        type: number
        format: double
        minimum: 0.0
        default: 1.0

    zipcode:
      name: zipcode
      in: query
      description: The zip code to search for BCycle stations.
      required: false
      schema:
        type: string

    limit:
      name: limit
      in: query
      description: Limit the number of BCycle stations are returned in the results.
      required: false
      schema:
        type: integer

    offset:
      name: offset
      in: query
      description: The offset of where in the list of BCycle stations results are returned.
      required: false
      schema:
        type: integer

  requestBodies:
    station_create:
      description: Station create request body.
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/station_create"

  responses:
    station_response:
      description: Station successful response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/station"

    stations_response:
      description: Stations successful response.
      headers:
        X-Total-Count:
          description: Total number of stations found.
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/stations_response"

    create_station_response:
      description: Create station successful response.
      headers:
        Location:
          description: A URL of the newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/station"

  schemas:
    station:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        docks:
          type: integer
          format: int32
          minimum: 1
        latitude:
          type: number
          format: double
          minimum: -90.0
          maximum: 90.0
        longitude:
          type: number
          format: double
          minimum: -180.0
          maximum: 180.0
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - street
        - city
        - state
        - zip
        - docks
        - latitude
        - longitude

    station_create:
      description: Create station body.
      type: object
      properties:
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        docks:
          type: integer
          format: int32
          minimum: 1
        latitude:
          type: number
          format: double
          minimum: -90.0
          maximum: 90.0
        longitude:
          type: number
          format: double
          minimum: -180.0
          maximum: 180.0
      required:
        - name
        - street
        - city
        - state
        - zip
        - docks
        - latitude
        - longitude

    stations_response:
      description: Stations successful response.
      $ref: "#/components/schemas/station"


